{"ast":null,"code":"import { of } from 'rxjs';\nimport { mockPosts } from '../mock/mock-posts'; // Adjust the path as necessary\nimport * as i0 from \"@angular/core\";\nclass PostService {\n  constructor() {}\n  // Method to get posts, returning the mock data as an Observable\n  getPosts() {\n    return of(mockPosts); // Using 'of' to convert the mockPosts array into an Observable\n  }\n  static #_ = this.ɵfac = function PostService_Factory(t) {\n    return new (t || PostService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PostService,\n    factory: PostService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { PostService };","map":{"version":3,"names":["of","mockPosts","PostService","constructor","getPosts","_","_2","factory","ɵfac","providedIn"],"sources":["/home/ismail/Projects/eSocialize/src/app/services/post.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { of, Observable } from 'rxjs';\nimport { Post } from '../models/post';\nimport { mockPosts } from '../mock/mock-posts'; // Adjust the path as necessary\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostService {\n  constructor() { }\n\n  // Method to get posts, returning the mock data as an Observable\n  getPosts(): Observable<Post[]> {\n    return of(mockPosts); // Using 'of' to convert the mockPosts array into an Observable\n  }\n}\n"],"mappings":"AACA,SAASA,EAAE,QAAoB,MAAM;AAErC,SAASC,SAAS,QAAQ,oBAAoB,CAAC,CAAC;;AAEhD,MAGaC,WAAW;EACtBC,YAAA,GAAgB;EAEhB;EACAC,QAAQA,CAAA;IACN,OAAOJ,EAAE,CAACC,SAAS,CAAC,CAAC,CAAC;EACxB;EAAC,QAAAI,CAAA,G;qBANUH,WAAW;EAAA;EAAA,QAAAI,EAAA,G;WAAXJ,WAAW;IAAAK,OAAA,EAAXL,WAAW,CAAAM,IAAA;IAAAC,UAAA,EAFV;EAAM;;SAEPP,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}